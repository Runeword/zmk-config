/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define layer_default 0
#define layer_numbers 1
/* #define layer_nav 3 */

/ {

  combos {
    compatible = "zmk,combos";

    combo_esc { timeout-ms = <20>; key-positions = <11 12>; bindings = <&kp ESC>; };
    combo_tab { timeout-ms = <20>; key-positions = <12 13>; bindings = <&kp TAB>; };
    combo_bspc { timeout-ms = <20>; key-positions = <17 18>; bindings = <&kp BSPC>; };
    /* combo_repeat { timeout-ms = <20>; key-positions = <11 12>; bindings = <&key_repeat>; }; */
    combo_enter { timeout-ms = <60>; key-positions = <11 12 13>; bindings = <&kp ENTER>; };
    combo_del { timeout-ms = <60>; key-positions = <16 17 18>; bindings = <&kp DEL>; };
    combo_lcaps { timeout-ms = <60>; key-positions = <21 22 23>; bindings = <&kp LCAPS>; };

    // sticky modifiers left

    combo_ctrl_l { timeout-ms = <30>; key-positions = <31 13>; bindings = <&sk LCTRL>; };
    combo_shft_l { timeout-ms = <30>; key-positions = <31 12>; bindings = <&sk LSHFT>; };
    combo_gui_l { timeout-ms = <30>; key-positions = <31 11>; bindings = <&sk LGUI>; };
    combo_alt_l { timeout-ms = <30>; key-positions = <31 10>; bindings = <&sk LALT>; };
    combo_ctrl_shft_l { timeout-ms = <30>; key-positions = <31 13 12>; bindings = <&sk LC(LSHFT)>; };
    combo_ctrl_alt_l { timeout-ms = <30>; key-positions = <31 13 10>; bindings = <&sk LC(LALT)>; };
    combo_gui_shft_l { timeout-ms = <30>; key-positions = <31 12 11>; bindings = <&sk LG(LSHFT)>; };

    // sticky modifiers right

    combo_ctrl_r { timeout-ms = <30>; key-positions = <32 16>; bindings = <&sk RCTRL>; };
    combo_shft_r { timeout-ms = <30>; key-positions = <32 17>; bindings = <&sk RSHFT>; };
    combo_gui_r { timeout-ms = <30>; key-positions = <32 18>; bindings = <&sk RGUI>; };
    combo_alt_r { timeout-ms = <30>; key-positions = <32 19>; bindings = <&sk RALT>; };
    combo_ctrl_shft_r { timeout-ms = <30>; key-positions = <32 16 17>; bindings = <&sk RC(RSHFT)>; };
    combo_ctrl_alt_r { timeout-ms = <30>; key-positions = <32 16 19>; bindings = <&sk RC(RALT)>; };
    combo_gui_shft_r { timeout-ms = <30>; key-positions = <32 18 19>; bindings = <&sk RG(RSHFT)>; };
  };

  keymap {
    compatible = "zmk,keymap";

    layer_default {
      bindings = <
      &kp SQT &kp COMMA &kp DOT &kp P &kp Y            &kp F &kp G &kp C &kp R &kp L
      &kp A &kp O &kp E &kp U &kp I                    &kp D &kp H &kp T &kp N &kp S
      &kp COLON &kp Q &kp J &kp K &kp X                &kp B &kp M &kp W &kp V &kp Z
      &sl layer_numbers &sl 2 &sl layer_nav &kp SPACE
      >;
    };

    layer_numbers {
      bindings = <
        &none &none &none &none &none            &kp N9 &kp N5 &kp N6 & &kp N7 &kp N8
        &none &none &none &none &none            &kp N0 &kp N1 &kp N2 & &kp N3 &kp N4
        &none &none &none &none &none            &none &none &none &none &none
        &trans &trans &trans &trans
        >;
    };

        /* layer_nav { */
        /*     bindings = < */
        /*     &kp HOME &kp END &kp PG_DOWN &kp PG_UP &none            &none &none &none &none &none */
        /*     &kp LEFT &kp RIGHT &kp DOWN &kp UP &none            &none &none &none &none &none */
        /*     &none &none &none &none &none            &none &none &none &none &none */
        /*     &trans &trans &trans &trans */
        /*     >; */
        /*     }; */
  };
};
